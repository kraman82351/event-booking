version: "3.8"

services:
  mongo_database:
    image: mongo
    container_name: mongo_database
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: irctc
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data
    networks:
      - microservices-net

  postgres_database:
    image: postgres:15
    container_name: postgres_database
    ports:
      - "25432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-net

  redis:
    image: redis:alpine
    container_name: redis_db
    ports:
      - "6379:6379"
    networks:
      - microservices-net

  # irctc-be:
  #   build: .
  #   container_name: irctc-be
  #   ports:
  #     - "8000:8080"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=uat
  #     - DB_HOST=postgres-database
  #     - DB_PORT=5432
  #     - DB_NAME=postgres
  #     - DB_USERNAME=admin
  #     - DB_PASSWORD=password
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #   depends_on:
  #     - postgres-database
  #     - redis
  #   networks:
  #     - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - microservices-net

  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - 5173:8080
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - microservices-net

  mongo_express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: irctc
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo

volumes:
  postgres_data:
  mongo_data:

networks:
  microservices-net:
    driver: bridge
